#BlueJ class context
comment0.target=App
comment1.params=
comment1.target=App()
comment10.params=nif
comment10.target=void\ montanteContribuinteAgregado(int)
comment10.text=\r\n\ M\u00E9todo\ que\ obt\u00E9m\ por\ parte\ do\ contribuinte\ individual,\ as\ despesas\ que\ foram\ emitidas\ em\ seu\ nome\ e\ verifica\ o\ montante\ de\ dedu\u00E7\u00E3o\ fiscal\ acumulado,\r\n\ por\ si\ e\ pelo\ agregado\ familiar.\r\n\ Cria-se\ uma\ lista\ que\ guarda\ as\ faturas\ do\ contribuinte\ em\ quest\u00E3o\ e\ cria-se\ outra\ que\ guarda\ as\ faturas\ do\ seu\ agregado.\r\n\ De\ seguida,\ \u00E9\ calculadoo\ montande\ de\ dedu\u00E7\u00E3o\ fiscal\ de\ cada\ atrav\u00E9s\ do\ m\u00E9todo\ montanteDeducaoPorListagemFatura.\r\n
comment11.params=nif
comment11.target=void\ totalFaturadoEmpresa(int)
comment11.text=\r\n\ M\u00E9todo\ que\ obt\u00E9m\ o\ total\ facturado\ por\ uma\ empresa\ num\ determinado\ per\u00EDodo;\r\n\ \u00C9\ pedido\ ao\ utilizador\ a\ data\ do\ in\u00EDcio\ e\ do\ fim\ do\ per\u00EDodo\ que\ quer\ verificar.\r\n\ Recorre-se\ ao\ m\u00E9todo\ totalEmpresa\ que\ soma\ todos\ os\ valores\ das\ faturas\ associadas\ \u00E0\ empresa.\r\n
comment12.params=nif
comment12.target=void\ listagemFaturasDaEmpresa(int)
comment12.text=\r\n\ M\u00E9todo\ que\ obt\u00E9m\ a\ listagem\ das\ faturas\ de\ uma\ determinada\ empresa,\ ordenada\ por\ valor.\r\n\ Cria-se\ uma\ lista\ das\ faturas\ da\ empresa\ atrav\u00E9s\ do\ m\u00E9todo\ listagemFaturasEmpresa.\r\n\ \ \r\n
comment13.params=nif
comment13.target=void\ listagemFaturasPorContribuinte(int)
comment13.text=\r\n\ M\u00E9todo\ que\ obt\u00E9m\ por\ parte\ das\ empresas,\ as\ listagens\ das\ faturas\ por\ contribuinte\ num\ determinado\ intervalo\ de\ datas.\r\n\ \u00C9\ pedido\ ao\ utilizador\ a\ data\ do\ in\u00EDcio\ e\ do\ fim\ do\ per\u00EDodo\ que\ quer\ verificar.\r\n\ Cria-se\ um\ map\ que\ guarda\ os\ nifs\ dos\ contribuintes\ e\ uma\ lista\ com\ as\ faturas\ que\ est\u00E3o\ associadas\ \u00E0\ empresa\ atrav\u00E9s\ do\ m\u00E9todo\ listFaturasPorContribuinte.\r\n\ \ \r\n
comment14.params=nif
comment14.target=void\ listagemFaturasPorContribuinteOrdenado(int)
comment14.text=\r\n\ \ M\u00E9todo\ que\ obt\u00E9m\ por\ parte\ das\ empresas,\ as\ listagens\ das\ faturas\ por\ contribuinte\ ordenadas\ por\ valor\ decrescente\ de\ despesa.\r\n\ \ Cria-se\ um\ map\ que\ guarda\ os\ nifs\ dos\ contribuintes\ e\ uma\ lista\ com\ as\ faturas\ que\ est\u00E3o\ associadas\ \u00E0\ empresa\ de\ forma\ decrescente\ atrav\u00E9s\ do\ m\u00E9todo\r\n\ \ listFaturasPorContribuinteOrdenado.\ \r\n
comment15.params=nifE
comment15.target=void\ criarFactura(int)
comment15.text=\r\n\ M\u00E9todo\ que\ cria\ uma\ fatura.\ \u00C9\ pedido\ as\ informa\u00E7\u00F5es\ necess\u00E1rias\ e\ \u00E9\ registada.\r\n
comment16.params=nif
comment16.target=void\ corrigirAtividade(int)
comment16.text=\r\n\ M\u00E9todo\ que\ corrige\ a\ atividade\ econ\u00F3mica\ de\ uma\ fatura.\r\n\ Caso\ a\ fatura\ exista,\ o\ cliente\ associado\ \u00E0\ fatura\ corresponda\ ao\ contribuinte\ que\ tenta\ associar\ e\ a\ empresa\ tenha\ mais\ de\ uma\ atividade,\r\n\ o\ contribuinte\ em\ quest\u00E3o\ pode\ alterar,\ deixando\ em\ registo\ que\ a\ alterou.\r\n\ Caso\ contr\u00E1rio,\ verifica-se\ se\ a\ fatura\ existe.\ Se\ n\u00E3o\ existir,\ \u00E9\ imprimido\ uma\ mensagem\ a\ dizer\ que\ n\u00E3o\ existe.\ Se\ existir,\ \u00E9\ porque\ j\u00E1\r\n\ est\u00E1\ catalogada.\r\n
comment17.params=nif
comment17.target=void\ associarAtividade(int)
comment17.text=\r\n\ M\u00E9todo\ que\ associada\ a\ atividade\ econ\u00F3mica\ a\ uma\ fatura.\r\n\ Caso\ a\ fatura\ exista,\ o\ cliente\ associado\ \u00E0\ fatura\ corresponda\ ao\ contribuinte\ que\ tenta\ associar\ e\ a\ empresa\ tenha\ mais\ de\ uma\ atividade,\r\n\ verifica-se\ se\ j\u00E1\ est\u00E1\ catalogada.\ Se\ estiver,n\u00E3o\ pode\ associar.\ Se\ n\u00E3o\ estiver,pode\ associar.\r\n
comment18.params=
comment18.target=void\ relacaoXempresas()
comment19.params=erro\ msg
comment19.target=int\ leMes(java.lang.String,\ java.lang.String)
comment2.params=args
comment2.target=void\ main(java.lang.String[])
comment2.text=\r\n\ M\u00E9todo\ de\ arranque\ da\ aplica\u00E7\u00E3o.\r\n\ Iniciamos\ a\ aplica\u00E7\u00E3o\ com\ o\ ficheiro\ de\ teste\ onde\ j\u00E1\ temos\ alguns\ contribuintes,\ empresas\ e\ faturas\ criadas,\ para\ facilitar\ a\ apresenta\u00E7\u00E3o.\r\n\ Sempre\ que\ terminamos\ sess\u00E3o,\ a\ plataforma\ guarda\ o\ estado\ da\ aplica\u00E7\u00E3o\ no\ ficheiro\ "Estado.obj".\ \r\n\ Se\ posteriormente\ quisermos\ retomar\ desse\ ponto,\ em\ vez\ de\ iniciar\ com\ o\ ficheiro\ de\ teste,\ iniciamos\ com\ o\ ficheiro\ "Estado.obj"\r\n
comment20.params=erro\ msg
comment20.target=int\ leDia(java.lang.String,\ java.lang.String)
comment21.params=erro\ msg
comment21.target=int\ leAno(java.lang.String,\ java.lang.String)
comment22.params=erro\ msg
comment22.target=java.lang.String\ leString(java.lang.String,\ java.lang.String)
comment23.params=erro\ msg
comment23.target=int\ leInt(java.lang.String,\ java.lang.String)
comment3.params=
comment3.target=void\ carregarMenus()
comment3.text=\r\n\ M\u00E9todo\ que\ carrega\ os\ menus\ inicial,\ do\ contribuinte,da\ empresa\ e\ do\ administrador.\r\n\ \r\n
comment4.params=
comment4.target=int\ loginAdministrador()
comment4.text=\r\n\ M\u00E9todo\ que\ permite\ que\ o\ login\ dos\ administradores.\ O\ c\u00F3gido\ seria\ dado\ ao\ administrador(definido\ como\ 1111).\r\n
comment5.params=i
comment5.target=int\ login(int)
comment5.text=\r\n\ M\u00E9todo\ que\ possibilita\ o\ login\ dos\ contribuintes\ individuais\ e\ das\ empresas.\r\n
comment6.params=
comment6.target=void\ registo()
comment6.text=\r\n\ M\u00E9todo\ que\ permite\ o\ registo\ de\ um\ contribuinte\ individual\ ou\ de\ uma\ empresa.\r\n\ \r\n
comment7.params=nif
comment7.target=void\ menuContribuinte(int)
comment7.text=\r\n\ M\u00E9todo\ que\ permite\ ao\ contribuinte\ verificar,\ por\ parte\ do\ contribuinte\ individual,\ as\ despesas\ que\ foram\ emitidas\ em\ seu\ nome\ \r\n\ e\ verificar\ o\ montante\ de\ dedu\u00E7\u00E3o\ fiscal\ acumulado,\ por\ si\ e\ pelo\ agregado\ familiar.\ Permite\ corrigir\ a\ atividade\ da\ fatura\ e\ associar\ uma\ atividade\r\n\ a\ uma\ fatura.\r\n
comment8.params=nif
comment8.target=void\ menuEmpresa(int)
comment8.text=\r\n\ M\u00E9todo\ que\ permite\ \u00E0\ empresa\ criar\ faturas,\ verificar\ o\ total\ faturado\ num\ determinado\ per\u00EDodo,\ obter\ a\ listagem\ das\ suas\ faturas,\ obter\ a\ listagem\ das\ \r\n\ suas\ faturas\ por\ contribuinte\ num\ determinado\ intervalo\ de\ datas\ e\ obter\ a\ listagem\ das\ suas\ faturas\ por\ contribuinte\ de\ forma\ decrescente.\r\n
comment9.params=
comment9.target=void\ menuAdministrador()
comment9.text=\r\n\ M\u00E9todo\ que\ permite\ ao\ administrador\ verificar\ os\ dez\ contribuintes\ que\ mais\ gastam\ em\ todo\ o\ sistema\ e\ as\ X\ empresas\ que\ t\u00EAm\ mais\ facturas\ em\ todo\ \r\n\ o\ sistema(e\ o\ montante\ de\ dedu\u00E7\u00F5es\ fiscais\ que\ as\ despesas\ registadas\ representam).\r\n\ \r\n
numComments=24
